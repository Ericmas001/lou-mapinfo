<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEfAQEBYwAAAGoAAABoAAAAZAAAAFEAAAAVAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        5f+Y2/T/mO7//4/q/v+J5vz/hN///4nV/P+P4P//fNj//wEPPP8MOlX/AQE37gAAFbMhISE/AAAAAAAA
        AAAAAAAABgMIPgAAAKoAAADamsO+98/8//+Vvcz/zPrv/9n+/v9jj83/BRdm/xM5hv9NYYn/WXec/32j
        2v97prz/ERMc/wASIf8BGiz/AAAO/wAeOf+M4v3/r/z//5zl+v+T0d7/mtXk/7fl7//o/Pr//f////z/
        ///r//n/udTl/7Tk+P+x8v//qez//5bo/P+g8f//oO7//5Lp/f+L5v/6J2qL+AAABPUAByb2AAAG0gAA
        HpX///8EAAAAAAAAAAAAAAAAAwUHMQEAAX0AAADGAAAA8ZW9vP/i////yvD2/+r////s////6Pz8/2Fy
        qf8KKH//QXC4/zNqlv8AAA3/AAAM/wsiNP8BAQ//SnqT/8Hx+/++7fz/t/P8/7Tl9f/C6vj/5fb7//r/
        ///0////7/z//+X3+f/m////4f///+j////f/f//2f3//7ry/v9xwdP/Klpj/wMQF/8AAATwAAAE3wAA
        BcsAABO5AAAElQEBD2UAAAAAAAAAAAAAAAAAAAAAAgMDAwQEBW0AAAC+AAAA8AEBAf+Z2vP/7P///+v/
        ///n////6P7+/+7///9egsP/CTd8/wASOf8AAA3/AAAO/wAADP80YnX/suz6/6fs+/+l5/b/p973/7jl
        9v/d+/7/9/////f8/P/6////+f7+//n+/v/8////+////d/9/vt1yNX5GFBX9wAAAPQBAQPxAAAB6wAA
        Bd4VAATJEAAGsgAABZkBAQl/AAAGSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAXQAAAfCAAAA8QEB
        Av8APp//drnz/+n9/f/u////5/7//+v//v/q/v//Hl+e/wAADv8EAxL/AAAQ/wAADP+S7Pn/oOr5/3LH
        3f+b3/T/rN/v/8Hk7f/m////9P////b8/P/9////+f7+//r///3d///3EUlZ7wAAAOYAAADcAAAC0gEB
        A8cBAQS9AAADrwAOFJ8qNDiNFxwjNQAABSEDBRIEAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAKAgABXQAA
        AZoAAADUAAAA9ihjgP86j/n/ABeS/yZQi//Q7f//6P39/8rl9//N5u//x/v//wEaSv8AAAz/AAAP/wEB
        D/+M6/f/oOj4/3bM5f+c4O//v+vz/9H1///3/f3//P////v////7////YJem/wAAAPQAAAHmAAAB0wAA
        ArwAAAGkAAADiwAAAHUAAAlDAgwWEgcOFwQAAAkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACXAQEBowEBAbwAAADkABBO+gpr3/9AbJ7/NWiR/w5Kpv8LRZz/nMHh/ub+//+10OP/sNLg/4i7
        2/8BAQ//AAAN/wAADf9nzOr/pPH4/6Lq9P/D7fT/4vv///P///38///7xOrz+BlHVvMAAALuAQEE4QAA
        AtEBAQO+AAAApgAAAosAAAJvAQADFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADZAAAA3QAAANsgUX7xn+///XTA//8AM6T/Lmiz/zCS4/8ADlT4AQEm9XKL
        mPbP+v/8utbk/7HO2/80XX3/BSE4/wEcMv8cMkf/Vrna/6jw9f/k+v/93P//9n6TmOwAAAfiAQEE1wAA
        AcoAAAG8AAAErAEBDZoAAAiGAQEHbwQDByEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9ZJD/PGeC8GeRq/Ht///67f7//u7////P/Pz/CWri/wAA
        IP0AAADpAAAA4gAAAORda2zxqM3j/ZWouP9IaYX/J0BW/yFNZP9FNVD/GTJO/wAgOP8AAAP2AAAB4QEB
        BMoAAAOwAQEDmQAAAoMAAANyAAAKQgABDA4AAAcBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAbJ7/THim/6zL2v3v////6Pz9/+//
        ///s/v//ATl69wAAAeYBAQHHAAAAuQAAALgAAADKHiIm20tcaOkzS2LyHjJH9w8qQPkfHyz3AAEG9AAA
        AekAAAHSAAABtwAAAZsAAAF9AAACWAAABAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAbJ7/V4Gu/014
        pv/O5O7/8P///+v9/v2BueH4AAAA4gAAAMEAAgiWAAAAgAMFBXwDAACPAAAAogQHDrcTFiHJAxMm1AEG
        EtgBEB/TAA4YxQEKFLEBDBaZAAgTfgAFDlkAAQoFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABAbJ7/QGye/0x3pv9Oeaf/xuHr/qvT3vQBAQHfAAAAuwMFCI4AAAZDDhQbEhUYHg4AAQcoAQECSAIB
        CGsGEh+FBBMkkwQTJZQLGCiGBRAedAAHEUEAAAQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABAbJ7/QGye/0Bsnv9LdqT/TXim/0BodfIAAADRAAAApAAAAGEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAEBAhoAAxARBxMjLwkWJxUIEyQWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0UXD/TXmp/0Bsnv9AbJ7/QGye/0Rwof8AAADJAAAAmAEB
        BDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD/8A////8AAP/AAP/gfwAA/4AAP4A/AAD/AAAfAB8AAP4AAAAAHwAA/AAAAAAfAAD8AAAAAB8AAPgA
        AAAAHwAA+AAAAAAfAAD4AAAAAB8AAPgAAAAAPwAA+AAAAAA/AAD4AAAAAH8AAPgAAAAA/wAA+AAAAAD/
        AAD4AAAAAP8AAPwAAAAA/wAA/AAAAAD/AAD8AAAAAP8AAPwAAAAAfwAA/AAAAAA/AAD8AAAAAB8AAPwA
        AAAAHwAA/AAAAAAPAAD8AAAAAA8AAPgAAAAADwAA4AAAAAAHAACAAAAAAAcAAIAAAAAAAwAAgAAAAAAD
        AACAAAAAAAMAAIAAAAAAAwAAgAAAAAADAACAAAAAAAcAAIAAAAAADwAAgAAAAAAfAAAAAAAAAP8AAAAA
        AAAf/wAAAAAAAH//AAAAAAAB//8AAAAAAB///wAAAAAAf///AAAAAAP///8AAAB8H////wAAAH//////
        AAA=
</value>
  </data>
</root>