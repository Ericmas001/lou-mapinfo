<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEALS0AAAEAIAA0IQAAFgAAACgAAAAtAAAAWgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAYAAAAKAAAADQAAAA4AAAANAAAADQAA
        AAwAAAALAAAACgAAAAkAAAAIAAAABgAAAAUAAAAEAAAABAAAAAQAAAADAAAAAwAAAAMAAAACAAAAAwAA
        AAMAAAAEAAAABQAAAAUAAAAGAAAABgAAAAUAAAAFAAAAAwAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAACgAAABYAAAAiAAAAKgAAACsAAAAqAAAAKQAA
        ACcAAAAlAAAAJAAAACEAAAAfAAAAGwAAABkAAAAYAAAAGAAAABcAAAAXAAAAFQAAABQAAAAUAAAAFAAA
        ABYAAAAXAAAAGQAAABoAAAAbAAAAGwAAABsAAAAYAAAAEwAAAAoAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAFwAAADAAAABHAAAAVQAAAFgAAABXAAAAVQAA
        AFIAAABQAAAATQAAAEoAAABFAAAAQQAAAD0AAAA7AAAAOgAAADoAAAA5AAAANwAAADYAAAA1AAAANgAA
        ADgAAAA6AAAAPQAAAD8AAABAAAAAQAAAAEAAAAA7AAAALgAAABwAAAAMAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAALAAcNYwAKD+wABgv0AAcN9QAIDu0ACQ7mAAkP3QAI
        DtkACA7PAAgMxAAGDLcABgqkAAQIjgAFCI4ABQiNAAUIjAAFCIoABAaCAQMGegEEBnUABAZ8AQUIgAEG
        CIUABgqZAAYKngAGCp8ABgqmAAUJoAAFCKABBQiRAAEBVAAAADMAAAAXAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAgMRAAsS1gc1XP8KLEv/Bx8x/wscKf8DFSX/ABEd/wAP
        HP8AEyH/AA8c/wAMF/8ACxP/AAsR/wALEv8AChH/AAkQ/wAJD/8ACQ//AAcN+wAHDPkABwz9AAYL/gAF
        C/8ABQv/AAcN/wALFP8CEh7/AhUl/wIbL/8ADxn/AgcKmQAAAEUAAAAgAAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEECg4kAA0V9QM5af8QYLP/GXXK/zd6s/9Qh63/VpG3/0t/
        qf9BcZ7/Qnqs/y9kl/8ZS3v/AjFc/wAmSP8AI0L/ACVE/wAlRf8AKEv/BDhn/wc9bv8QP2j/IEVi/yVJ
        Zf85XoP/MGad/xVapP8LUZ3/B0SD/w1YpP8CIjz/AgkO0wAAAFIAAAAmAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDBggYARQj3gBJjv8AWbL/AVKi/wI+dv8sb6//GG/D/wVM
        mv8BUKL/BEeQ/wRdu/8DQYD/AEWS/wBDjP8FSpL/A1Kp/wNKl/8DOm//BEqT/wuE5P8KUJv/EVif/xto
        s/8lc7z/D1+w/w5Smv8APHX/A0J6/whbqP8HT5j/AQoP5AAAAFkAAAAuAAAAEAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAYAAAAZAQwUuwA/dP8NX6//GGe0/yBst/8wfL3/C1uv/wBE
        jf8AWLL/AEOI/wBWsP8ANGD/AD57/x15yf8af9L/AViz/wpPl/8LS43/Ajxw/wFJlP8AV7T/AESH/xJf
        rP8cd8n/CFKe/wAsV/8ANWT/AFOm/wBMlf8APXP/AwsP2wAAAGMAAAA9AAAAGwAAAAcAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABQAAABIBBghDAAoS7wA4Y/8Sgtn/H4fU/zGCwf9FhrX/To+9/1SX
        xf9JkML/R4a1/0Cc2f8iesL/A0iO/wFVq/8EUqH/BFSk/wJUpv8AS5P/AFit/wFRoP8FX7j/GGCr/yNh
        n/8zgsH/I1yV/xNQiv8FSYr/AEeP/wAuV/8ATpz/AA0W9QEEBoQAAABTAAAALwAAABQAAAAFAAAAAQAA
        AAAAAAAAAAAAAAAAAAEAAAAFAAAAEAAAACgDCxGxACxS/wWJ5v8psfj/IJHb/xiS4f8OiN7/BmS6/wtZ
        ov8NWqL/EmWu/xZmsP8OasD/AGnK/wBXq/8AT6H/AFGj/wBPoP8AUqP/AFSo/wBUp/8AVqj/Clae/wtW
        mv8JWKH/FGy8/z6h3f8njdb/Bl2u/wFDgf8Fc9P/AT1v/wMIC+IBAgNvAAAASgAAACgAAAAPAAAABAAA
        AAAAAAAAAAAAAAAAAAEAAAAKAAAAIAQLEI8AHjz+Az53/yeIyv8KLk3/ABgu/QEdNf8IQnD/A23I/wBj
        vf8Aftv/DpDj/x+M1f8bb7T/El6c/wFYp/8AZsD/AFKf/wBhu/8XleH/I5bf/x+O2P8Yi9n/CnjN/wBp
        x/8AcM//I3m9/jZbfPYHIDX9ABcs9wJGgP8Db8z/DJjv/wApSP8GDBDKAAAAYgAAAD8AAAAdAAAACAAA
        AAEAAAAAAAAAAAAAAAMCDRUZBBopqAk2WP8Zmuf/DYHV/whQkf8CIj//ABIk9QANF/sAEiX/AD12/wFW
        qf8ATZP/BB84/wQeNvgFGirVABEh4QAdNP0BVKT/AE6c/wder/8VRWn/ByE2/wUiOfYCHTH+ABMl/wI6
        bv8CaMD/ADtq/QAyXPcAIDj9AgkQ8QApSf8dqfX/MLb6/y+x9f8GME//AgcMsgAAAFEAAAAoAAAADQAA
        AAEAAAAAAAAAAQAAAAUKFh5ODD1g/4Da/P9HksT/PqXg/zKx8f8KPmj/AQ8b/zyIvP8Zcr3/KKXr/xCK
        2/8DTpL/AD1w/wAlRvoBGC72FUhw/QAoSf4AV6b/BG3H/wBUoP8BTo3/BR0w/wARHvIGITT8BjRa/xBj
        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
        AAEWICgGNlt5gY+rvtZDdZrzACVR/wCGyP8IzPr/B8v6/wnO+/8Ep+H/BEB8+ixMacg8WnKnJDM/SAAA
        ABQAAAAIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAwoOEBQXPFzOInmu/xKPwv8SodH/F6HP/xmm0/8SrNz/EZPC/iEwPosAAAA+AAAAHAAA
        AAcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAkKCworY4zdx/b//7Hv//+N4fb/ZNn1/zve/P8n4///FM3x/y5NZaAAAAA0AAAAFAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUpS2XAbbPS/4DC3/+a0On/XOj//xibzf8mq9j/HZLD/x80RHYAAAAqAAAADgAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAJAS1RVJV+D+FLb+P8Um8//ANP0/wWb0v+z6fr/O4it3wcLDUwAAAAhAAAACQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAANIThK0xVMd/8PhLz/Crjj/wJhof8NQmj/JjhHowAAAEEAAAAcAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAALGEZnxwZZl/8EerT/FOX+/yiw0/8WU4z/IzM/nQAAAD0AAAAZAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJH1aBuafo+/8v4Pr/IeT8/3v0//8yncH/JC03lgAAADgAAAAXAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGJluGvqrR4/+a5/j/gPX//2PF3v8UYJr/JzxMgQAAACwAAAARAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADMlFohAE2Yf+kw9v/tt/q/zGSuv8BIkP0NEpZXQAAABsAAAAJAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABTpgfIoVUovGGFWKyBFNgtY8V2uBAAAAGAAAAAwAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAHAAAACgAAAAsAAAAJAAAABwAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////gAAPwAAAAA+AAA/AAAAAB4AAD8AAAAAHgAAPgAAAAAeAAA+AAAAAB4AAD4AAAAAHgAAPgA
        AAAAOAAA8AAAAAAYAADgAAAAAAgAAMAAAAAACAAAwAAAAAAAAADAAAAAAAAAAIAAAAAAAAAAgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAACAAA4AAAAAAY
        AAD4AAAAAHgAAP/4AAB/+AAA//wAAP/4AAD//gAB//gAAP//gAP/+AAA//+AA//4AAD//4AD//gAAP//
        gAf/+AAA///AB//4AAD//8AH//gAAP//wAf/+AAA///AB//4AAD//8AH//gAAP//4A//+AAA///////4
        AAA=
</value>
  </data>
</root>